# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# Azure Pipeline Template for deploying models to ACI

parameters:
- name: serviceConnection
  type: string
- name: resourceGroup
  type: string
- name: amlWorkspaceName
  type: string
- name: groupingTags
  type: string
- name: routingModelName
  type: string
- name: routingModelTagName
  type: string
- name: routingModelTagValue
  type: string
- name: routingServiceName
  type: string


jobs:

- job: deploy_models
  displayName: 'Deploy Models'
  timeoutInMinutes: 0
  steps:

    - task: UsePythonVersion@0
      displayName: 'Use Python 3.7'
      inputs:
        versionSpec: 3.7

    - task: AzureCLI@1
      displayName: 'Deploy Models in Groups'
      inputs:
        azureSubscription: ${{parameters.serviceConnection}}
        scriptLocation: inlineScript
        inlineScript: |
          # Install dependencies
          python -m pip install --upgrade pip && python -m pip install joblib azureml-sdk
          # Create/update training pipeline
          python scripts/deploy_grouped_models.py --grouping-tags '${{parameters.groupingTags}}' \
                                                  --endpoints-path 'endpoints.pkl' \
                                                  --nmodels $(DATASET_MAXFILES) \
                                                  --routing-model-tag-name '${{parameters.routingModelTagName}}' \
                                                  --routing-model-tag-value '${{parameters.routingModelTagValue}}' \
                                                  --subscription-id $(az account show --query id -o tsv) \
                                                  --resource-group ${{parameters.resourceGroup}} \
                                                  --workspace-name ${{parameters.amlWorkspaceName}}

    - publish: 'endpoints.pkl'
      artifact: endpointsartifact
      displayName: 'Publish Endpoints Artifact'


- job: routing_model
  displayName: 'Register Routing Model'
  dependsOn: deploy_models
  steps:

    - download: current
      artifact: endpointsartifact

    - task: AzureCLI@1
      displayName: 'Register Routing Model'
      inputs:
        azureSubscription: ${{parameters.serviceConnection}}
        scriptLocation: inlineScript
        inlineScript: |
          # Install ML extension
          az extension add -n azure-cli-ml
          # Register model
          az ml model register --name ${{parameters.routingModelName}} \
                               --model-path '$(Pipeline.Workspace)/endpointsartifact/endpoints.pkl' \
                               --tag '${{parameters.routingModelTagName}}=${{parameters.routingModelTagValue}}' \
                               --output-metadata-file routing_model.json \
                               --workspace-name ${{parameters.amlWorkspaceName}} \
                               --resource-group ${{parameters.resourceGroup}}

    - publish: 'routing_model.json'
      artifact: routingmodelartifact
      displayName: 'Publish Routing Model Artifact'


- job: routing_webservice
  displayName: 'Deploy Routing Webservice'
  dependsOn: routing_model
  steps:

    - download: current
      artifact: routingmodelartifact

    - task: AzureCLI@1
      displayName: 'Deploy Routing Model to ACI'
      inputs:
        azureSubscription: ${{parameters.serviceConnection}}
        scriptLocation: inlineScript
        inlineScript: |
          # Install ML extension
          az extension add -n azure-cli-ml
          # Deploy model
          az ml model deploy --name '${{parameters.routingServiceName}}' \
                             --dc mlops_pipelines/3-modeling/deploy-models-aci/deployment-config-aci.yml \
                             --model-metadata-file '$(Pipeline.Workspace)/routingmodelartifact/routing_model.json' \
                             --rt python \
                             --es scripts/routing_webservice.py \
                             --cf scripts/routing_webservice.conda.yml \
                             --overwrite \
                             --workspace-name ${{parameters.amlWorkspaceName}} \
                             --resource-group ${{parameters.resourceGroup}}
